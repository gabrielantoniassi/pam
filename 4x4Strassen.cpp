#include <iostream>
using namespace std;
#include "SMatrix.h"

void randMat(double data[], int tam) {
	for (int i = 0; i < tam*tam; i++)
		data[i] = rand() % 100; // random number between 0 and 99
}

SMatrix<double, 4, 4> A, B, C(0);

randMat(A.m_data, 4);
randMat(B.m_data, 4);

m1 = (A(0,0)+A(1,1)+A(2,2)+A(3,3))*(B(0,0)+B(1,1)+B(2,2)+B(3,3))
m2 = (A(0,1)-A(1,1)+A(2,3)-A(3,3))*(B(1,0)+B(1,1)+B(3,2)+B(3,3))
m3 = (A(1,0)-A(0,0)-A(2,2)+A(3,2))*(B(0,0)+B(0,1)+B(2,2)+B(2,3))
m4 = (A(0,0)+A(0,1)+A(2,2)+A(2,3))*(B(1,1)+B(3,3))
m5 = (A(0,0)+A(2,2))*(-B(1,1)+B(0,1)+B(2,3)-B(3,3))
m6 = (A(1,1)+A(3,3))*(B(1,0)-B(0,0)-B(2,2)+B(3,2))
m7 = (A(1,0)+A(1,1)+A(3,2)+A(3,3))*(B(0,0)+B(2,2))

m8 = (A(0,2)-A(2,2)+A(1,3)-A(3,3))*(B(2,0)+B(3,1)+B(2,2)+B(3,3))
m9 = (A(0,3)-A(1,3)-A(2,3)+A(3,3))*(B(3,0)+B(3,1)+B(3,2)+B(3,3))
m10 = (-A(0,2)+A(1,2)+A(2,2)-A(3,2))*(B(2,0)+B(2,1)+B(2,2)+B(2,3))
m11 = (A(0,2)-A(2,2)+A(0,3)-A(2,3))*(B(3,1)+B(3,3))
m12 = (A(0,2)-A(2,2))*(B(2,1)-B(3,1)+B(2,3)-B(3,3))
m13 = (A(1,3)-A(3,3))*(-B(2,0)+B(3,0)-B(2,2)+B(3,2))
m14 = (A(1,2)-A(3,2)+A(1,3)-A(3,3))*(B(2,0)+B(2,2))

m15 = (-A(0,0)+A(2,0)-A(1,1)+A(3,1))*(B(0,0)+B(1,1)+B(0,2)+B(1,3))
m16 = (-A(0,1)+A(1,1)+A(2,1)-A(3,1))*(B(1,0)+B(1,1)+B(1,2)+B(1,3))
m17 = (A(0,0)-A(1,0)-A(2,0)+A(3,0))*(B(0,0)+B(0,1)+B(0,2)+B(0,3))
m18 = (-A(0,0)+A(2,0)-A(0,1)+A(2,1))*(B(1,1)+B(1,3))
m19 = (-A(0,0)+A(2,0))*(-B(1,1)+B(0,1)+B(0,3)-B(1,3))
m20 = (-A(1,1)+A(3,1))*(B(1,0)-B(0,0)+B(1,2)-B(0,2))
m21 = (-A(1,0)+A(3,0)-A(1,1)+A(3,1))*(B(0,0)+B(0,2))

m22 = (A(0,0)+A(1,1)+A(0,2)+A(1,3))*(B(2,2)+B(3,3))
m23 = (A(0,1)-A(1,1)+A(0,3)-A(1,3))*(B(3,2)+B(3,3))
m24 = (A(1,0)-A(0,0)+A(1,2)-A(0,2))*(B(2,2)+B(2,3))
m25 = (A(0,0)+A(0,1)+A(0,2)+A(0,3))*(B(3,3))
m26 = (A(0,0)+A(0,2))*(B(2,3)-B(3,3))
m27 = (A(1,1)+A(1,3))*(-B(2,2)+B(3,2))
m28 = (A(1,0)+A(1,1)+A(1,2)+A(1,3))*(B(2,2))

m29 = (A(0,0)+A(1,1))*(B(0,2)-B(2,2)+B(1,3)-B(3,3))
m30 = (A(0,1)-A(1,1))*(B(1,2)-B(3,2)+B(1,3)-B(3,3))
m31 = (A(1,0)-A(0,0))*(B(0,2)-B(2,2)+B(0,3)-B(2,3))
m32 = (A(0,1)+A(0,0))*(B(1,3)-B(3,3))
m33 = (A(0,0))*(B(0,3)-B(1,3)-B(2,3)+B(3,3))
m34 = (A(1,1))*(-B(0,2)+B(1,2)+B(2,2)-B(3,2))
m35 = (A(1,1)+A(1,0))*(B(0,2)-B(2,2))

m36 = (A(2,2)+A(3,3))*(-B(0,0)+B(2,0)-B(1,1)+B(3,1))
m37 = (A(2,3)-A(3,3))*(-B(1,0)+B(3,0)-B(1,1)+B(3,1))
m38 = (-A(2,2)+A(3,2))*(-B(0,0)+B(2,0)-B(0,1)+B(2,1))
m39 = (A(2,3)+A(2,2))*(-B(1,1)+B(3,1))
m40 = (A(2,2))*(-B(0,1)+B(1,1)+B(2,1)-B(3,1))
m41 = (A(3,3))*(B(0,0)-B(1,0)-B(2,0)+B(3,0))
m42 = (A(3,2)+A(3,3))*(-B(0,0)+B(2,0))

m43 = (A(2,0)+A(3,1)+A(2,2)+A(3,3))*(B(1,1)+B(0,0))
m44 = (-A(3,1)+A(2,1)+A(2,3)-A(3,3))*(B(1,0)+B(1,1))
m45 = (-A(2,0)+A(3,0)-A(2,2)+A(3,2))*(B(0,0)+B(0,1))
m46 = (A(2,0)+A(2,1)+A(2,2)+A(2,3))*(B(1,1))
m47 = (A(2,0)+A(2,2))*(-B(1,1)+B(0,1))
m48 = (A(3,1)+A(3,3))*(B(1,0)-B(0,0))
m49 = (A(3,0)+A(3,1)+A(3,2)+A(3,3))*(B(0,0))

C(0,0) = m41+m6+m8+m9-m11+m13-m22-m23+m25-m27+m36+m37-m39+m1+m2-m4
C(1,0) = m41+m42+m6+m7+m13+m14-m27-m28
C(2,0) = m41+m43+m44-m46+m48+m36+m37-m39
C(3,0) = m41+m42+m48+m49

C(0,1) = m40+m11+m12-m25-m26+m39+m4+m5
C(1,1) = m40-m42-m7+m8+m10+m12-m14-m22-m24-m26+m28+m36+m38+m1+m3+m5
C(2,1) = m40+m46+m47+m39
C(3,1) = m40-m42+m43+m45+m47-m49+m36+m38

C(0,2) = m22+m23-m25+m27+m29+m30-m32+m34
C(1,2) = m27+m28+m34+m35
C(2,2) = -m43-m44+m46-m48+m6+m15+m16-m18+m20+m29+m30-m32+m34+m1+m2-m4
C(3,2) = -m48-m49+m6+m7+m20+m21+m34+m35

C(0,3) = m25+m26+m32+m33
C(1,3) = m22+m24+m26-m28+m29+m31+m33-m35
C(2,3) = -m46-m47+m18+m19+m32+m33+m4+m5
C(3,3) = -m43-m45-m47+m49-m7+m15+m17+m19-m21+m29+m31+m33-m35+m1+m3+m5

cout << A << endl;
cout << B << endl;
cout << C << endl;
cout << C - A.mul<4>(B) << endl;
