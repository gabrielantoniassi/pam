#import <iostream>
using namespace std;
#import "SMatrix.h"

void randMat(double data[], int tam) {
	for (int i = 0; i < tam*tam; i++)
		data[i] = rand() % 100; // random number between 0 and 99
}

SMatrix<double, 4, 4> A, B, C(0);

randMat(A.data, 4);
randMat(B.data, 4);

m1 =  A(0,0)*B(0,0)
m2 =  A(0,1)*B(1,0)
m3 =  A(0,0)*B(0,1)
m4 =  A(0,1)*B(1,1)
m5 =  A(1,0)*B(0,0)
m6 =  A(1,1)*B(1,0)
m7 =  A(1,0)*B(0,1)
m8 =  A(1,1)*B(1,1)

m9 =  A(0,2)*B(2,0)
m10=  A(0,3)*B(3,0)
m11=  A(0,2)*B(2,1)
m12=  A(0,3)*B(3,1)
m13=  A(1,2)*B(2,0)
m14=  A(1,3)*B(3,0)
m15=  A(1,2)*B(2,1)
m16=  A(1,3)*B(3,1)

m17= ( A(2,0)+ A(2,2))*(B(0,2)-B(0,0))
m18= ( A(2,1)+ A(2,3))*(B(1,2)-B(1,0))
m19= ( A(2,0)+ A(2,2))*(B(0,3)-B(0,1))
m20= ( A(2,1)+ A(2,3))*(B(1,3)-B(1,1))
m21= ( A(3,0)+ A(3,2))*(B(0,2)-B(0,0))
m22= ( A(3,1)+ A(3,3))*(B(1,2)-B(1,0))
m23= ( A(3,0)+ A(3,2))*(B(0,3)-B(0,1))
m24= ( A(3,1)+ A(3,3))*(B(1,3)-B(1,1))

m25= ( A(2,0)+ A(2,2)- A(0,0))*(B(2,2)-B(0,2)+B(0,0))
m26= ( A(2,1)+ A(2,3)- A(0,1))*(B(3,2)-B(1,2)+B(1,0))
m27= ( A(2,0)+ A(2,2)- A(0,0))*(B(2,3)-B(0,3)+B(0,1))
m28= ( A(2,1)+ A(2,3)- A(0,1))*(B(3,3)-B(1,3)+B(1,1))
m29= ( A(3,0)+ A(3,2)- A(1,0))*(B(2,2)-B(0,2)+B(0,0))
m30= ( A(3,1)+ A(3,3)- A(1,1))*(B(3,2)-B(1,2)+B(1,0))
m31= ( A(3,0)+ A(3,2)- A(1,0))*(B(2,3)-B(0,3)+B(0,1))
m32= ( A(3,1)+ A(3,3)- A(1,1))*(B(3,3)-B(1,3)+B(1,1))

m33= ( A(0,0)- A(2,0))*(B(2,2)-B(0,2))
m34= ( A(0,1)- A(2,1))*(B(3,2)-B(1,2))
m35= ( A(0,0)- A(2,0))*(B(2,3)-B(0,3))
m36= ( A(0,1)- A(2,1))*(B(3,3)-B(1,3))
m37= ( A(1,0)- A(3,0))*(B(2,2)-B(0,2))
m38= ( A(1,1)- A(3,1))*(B(3,2)-B(1,2))
m39= ( A(1,0)- A(3,0))*(B(2,3)-B(0,3))
m40= ( A(1,1)- A(3,1))*(B(3,3)-B(1,3))

m41= ( A(0,2)- A(2,0)- A(2,2)+ A(0,0))*B(2,2)
m42= ( A(0,3)- A(2,1)- A(2,3)+ A(0,1))*B(3,2)
m43= ( A(0,2)- A(2,0)- A(2,2)+ A(0,0))*B(2,3)
m44= ( A(0,3)- A(2,1)- A(2,3)+ A(0,1))*B(3,3)
m45= ( A(1,2)- A(3,0)- A(3,2)+ A(1,0))*B(2,2)
m46= ( A(1,3)- A(3,1)- A(3,3)+ A(1,1))*B(3,2)
m47= ( A(1,2)- A(3,0)- A(3,2)+ A(1,0))*B(2,3)
m48= ( A(1,3)- A(3,1)- A(3,3)+ A(1,1))*B(3,3)

m49=  A(2,2)*(B(2,0)-B(2,2)+B(0,2)-B(0,0))
m50=  A(2,3)*(B(3,0)-B(3,2)+B(1,2)-B(1,0))
m51=  A(2,2)*(B(2,1)-B(2,3)+B(0,3)-B(0,1))
m52=  A(2,3)*(B(3,1)-B(3,3)+B(1,3)-B(1,1))
m53=  A(3,2)*(B(2,0)-B(2,2)+B(0,2)-B(0,0))
m54=  A(3,3)*(B(3,0)-B(3,2)+B(1,2)-B(1,0))
m55=  A(3,2)*(B(2,1)-B(2,3)+B(0,3)-B(0,1))
m56=  A(3,3)*(B(3,1)-B(3,3)+B(1,3)-B(1,1))

C(0,0) = m1 + m2 + m9 + m10
C(0,1) = m3 + m4 + m11 + m12
C(1,0) = m5 + m6 + m13 + m14
C(1,1) = m7 + m8 + m15 + m16

C(2,0) = m1 + m2 + m25 + m26 + m33 + m34 + m49 + m50
C(2,1) = m3 + m4 + m27 + m28 + m35 + m36 + m51 + m52
C(3,0) = m5 + m6 + m29 + m30 + m37 + m38 + m53 + m54
C(3,1) = m7 + m8 + m31 + m32 + m39 + m40 + m55 + m56

C(0,2) = m1 + m2 + m25 + m26 + m17 + m18 + m41 + m42
C(0,3) = m3 + m4 + m27 + m28 + m19 + m20 + m43 + m44
C(1,2) = m5 + m6 + m29 + m30 + m21 + m22 + m45 + m46
C(1,3) = m7 + m8 + m31 + m32 + m23 + m24 + m47 + m48

C(2,2) = m1 + m2 + m25 + m26 + m33 + m34 + m17 + m18
C(2,3) = m3 + m4 + m27 + m28 + m35 + m36 + m19 + m20
C(3,2) = m5 + m6 + m29 + m30 + m37 + m38 + m21 + m22
C(3,3) = m7 + m8 + m31 + m32 + m39 + m40 + m23 + m24

cout << A << endl;
cout << B << endl;
cout << C << endl;
cout << C - A.mul<4>(B) << endl;
